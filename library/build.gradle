apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(pCompileSdkVersion)
    buildToolsVersion pBuildToolsVersion

    defaultConfig {
        minSdkVersion Integer.parseInt(pMinSdkVersion)
        targetSdkVersion Integer.parseInt(pCompileSdkVersion)
        versionCode 1
        versionName pVersionName
        consumerProguardFiles 'proguard-consumer.pro'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.pro'
        }
    }

    libraryVariants.all { variant ->
        int versionCode = 0
        (pVersionName =~ /(\d+)/).collect {
            Integer.parseInt(it[0] as String)
        }.take(4).eachWithIndex { num, index ->
            versionCode += (num * Math.max(1, (1000000 / Math.pow(100, index))))
        }
        variant.mergedFlavor.versionCode = versionCode
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests { all { jvmArgs '-noverify' } }
    }
}

configurations {
    testCompile.exclude group: 'org.hamcrest', module: 'hamcrest-core'
}

dependencies {
    compile 'rxsqlite:bindings:4.0.0'
    provided 'rxsqlite:compiler:4.0.0'
    compile 'com.android.support:support-annotations:25.0.1'
    compile 'io.reactivex:rxjava:1.2.2'
    compile 'sqlite4a:library:3.15.1-r2-SNAPSHOT'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.2.16'
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
}

apply from: 'bintray.gradle'
